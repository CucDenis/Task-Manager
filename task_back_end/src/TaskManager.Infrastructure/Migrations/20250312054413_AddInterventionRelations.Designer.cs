// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskManager.Infrastructure.Data;

#nullable disable

namespace TaskManager.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250312054413_AddInterventionRelations")]
    partial class AddInterventionRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TaskManager.Domain.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CuiCnp")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cui_cnp");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("client_pkey");

                    b.ToTable("client", (string)null);
                });

            modelBuilder.Entity("TaskManager.Domain.Models.ClientContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("client_id");

                    b.Property<string>("ContactName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("contact_name");

                    b.HasKey("Id")
                        .HasName("client_contact_pkey");

                    b.HasIndex("ClientId");

                    b.ToTable("client_contact", (string)null);
                });

            modelBuilder.Entity("TaskManager.Domain.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<bool?>("FreeInterventions")
                        .HasColumnType("boolean")
                        .HasColumnName("free_interventions");

                    b.Property<int?>("OfferId")
                        .HasColumnType("integer")
                        .HasColumnName("offer_id");

                    b.Property<string>("Signatures")
                        .HasColumnType("text")
                        .HasColumnName("signatures");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.HasKey("Id")
                        .HasName("contract_pkey");

                    b.HasIndex("OfferId");

                    b.ToTable("contract", (string)null);
                });

            modelBuilder.Entity("TaskManager.Domain.Models.InterventionDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("client_id");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("contact_person");

                    b.Property<DateTime?>("InterventionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("intervention_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("status");

                    b.Property<int?>("TechnicianId")
                        .HasColumnType("integer")
                        .HasColumnName("technician_id");

                    b.Property<string>("TimeInterval")
                        .HasColumnType("text")
                        .HasColumnName("time_interval");

                    b.Property<string>("WorkPointAddress")
                        .HasColumnType("text")
                        .HasColumnName("work_point_address");

                    b.HasKey("Id")
                        .HasName("intervention_document_pkey");

                    b.HasIndex("ClientId");

                    b.HasIndex("TechnicianId");

                    b.ToTable("intervention_document", (string)null);
                });

            modelBuilder.Entity("TaskManager.Domain.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientCompany")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("client_company");

                    b.Property<DateOnly?>("IssueDate")
                        .HasColumnType("date")
                        .HasColumnName("issue_date");

                    b.Property<string>("IssuingCompany")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("issuing_company");

                    b.Property<DateOnly?>("PaymentDue")
                        .HasColumnType("date")
                        .HasColumnName("payment_due");

                    b.Property<decimal?>("Subtotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("subtotal");

                    b.Property<decimal?>("Total")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("total");

                    b.HasKey("Id")
                        .HasName("invoice_pkey");

                    b.ToTable("invoice", (string)null);
                });

            modelBuilder.Entity("TaskManager.Domain.Models.InvoiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("integer")
                        .HasColumnName("invoice_id");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("TotalPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("total_price");

                    b.Property<decimal?>("UnitPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("unit_price");

                    b.Property<decimal?>("Vat")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("vat");

                    b.HasKey("Id")
                        .HasName("invoice_item_pkey");

                    b.HasIndex("InvoiceId");

                    b.ToTable("invoice_item", (string)null);
                });

            modelBuilder.Entity("TaskManager.Domain.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientCompany")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("client_company");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("creation_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<DateOnly?>("ValidityPeriod")
                        .HasColumnType("date")
                        .HasColumnName("validity_period");

                    b.HasKey("Id")
                        .HasName("offer_pkey");

                    b.ToTable("offer", (string)null);
                });

            modelBuilder.Entity("TaskManager.Domain.Models.OfferDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("category");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int?>("OfferId")
                        .HasColumnType("integer")
                        .HasColumnName("offer_id");

                    b.Property<decimal?>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("price");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sub_category");

                    b.Property<string>("SystemType")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("system_type");

                    b.HasKey("Id")
                        .HasName("offer_device_pkey");

                    b.HasIndex("OfferId");

                    b.ToTable("offer_device", (string)null);
                });

            modelBuilder.Entity("TaskManager.Domain.Models.OfferMaintenanceSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int?>("OfferId")
                        .HasColumnType("integer")
                        .HasColumnName("offer_id");

                    b.Property<decimal?>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("price");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("offer_maintenance_system_pkey");

                    b.HasIndex("OfferId");

                    b.ToTable("offer_maintenance_system", (string)null);
                });

            modelBuilder.Entity("TaskManager.Domain.Models.Technician", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Signature")
                        .HasColumnType("text")
                        .HasColumnName("signature");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("technician_pkey");

                    b.ToTable("technician", (string)null);
                });

            modelBuilder.Entity("TaskManager.Domain.Models.ClientContact", b =>
                {
                    b.HasOne("TaskManager.Domain.Models.Client", "Client")
                        .WithMany("ClientContacts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("client_contact_client_id_fkey");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("TaskManager.Domain.Models.Contract", b =>
                {
                    b.HasOne("TaskManager.Domain.Models.Offer", "Offer")
                        .WithMany("Contracts")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("contract_offer_id_fkey");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("TaskManager.Domain.Models.InterventionDocument", b =>
                {
                    b.HasOne("TaskManager.Domain.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("TaskManager.Domain.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("TechnicianId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Client");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("TaskManager.Domain.Models.InvoiceItem", b =>
                {
                    b.HasOne("TaskManager.Domain.Models.Invoice", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("invoice_item_invoice_id_fkey");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("TaskManager.Domain.Models.OfferDevice", b =>
                {
                    b.HasOne("TaskManager.Domain.Models.Offer", "Offer")
                        .WithMany("OfferDevices")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("offer_device_offer_id_fkey");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("TaskManager.Domain.Models.OfferMaintenanceSystem", b =>
                {
                    b.HasOne("TaskManager.Domain.Models.Offer", "Offer")
                        .WithMany("OfferMaintenanceSystems")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("offer_maintenance_system_offer_id_fkey");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("TaskManager.Domain.Models.Client", b =>
                {
                    b.Navigation("ClientContacts");
                });

            modelBuilder.Entity("TaskManager.Domain.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("TaskManager.Domain.Models.Offer", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("OfferDevices");

                    b.Navigation("OfferMaintenanceSystems");
                });
#pragma warning restore 612, 618
        }
    }
}
